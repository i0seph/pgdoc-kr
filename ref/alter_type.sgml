<!--
doc/src/sgml/ref/alter_type.sgml
PostgreSQL documentation
-->

<refentry id="sql-altertype">
 <indexterm zone="sql-altertype">
  <primary>ALTER TYPE</primary>
 </indexterm>

 <refmeta>
  <refentrytitle>ALTER TYPE</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>ALTER TYPE</refname>
  <refpurpose>자료형 정의 바꾸기</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
<synopsis>
ALTER TYPE <replaceable class="parameter">이름</replaceable> <replaceable class="parameter">작업</replaceable> [, ... ]
ALTER TYPE <replaceable class="parameter">이름</replaceable> OWNER TO { <replaceable class="parameter">새소유주</replaceable> | CURRENT_USER | SESSION_USER }
ALTER TYPE <replaceable class="parameter">이름</replaceable> RENAME ATTRIBUTE <replaceable class="parameter">속성이름</replaceable> TO <replaceable class="parameter">새속성이름</replaceable> [ CASCADE | RESTRICT ]
ALTER TYPE <replaceable class="parameter">이름</replaceable> RENAME TO <replaceable class="parameter">새이름</replaceable>
ALTER TYPE <replaceable class="parameter">이름</replaceable> SET SCHEMA <replaceable class="parameter">새스키마</replaceable>
ALTER TYPE <replaceable class="parameter">이름</replaceable> ADD VALUE [ IF NOT EXISTS ] <replaceable class="parameter">새나열값</replaceable> [ { BEFORE | AFTER } <replaceable class="parameter">인근나열값</replaceable> ]
ALTER TYPE <replaceable class="parameter">이름</replaceable> RENAME VALUE <replaceable class="parameter">기존나열값</replaceable> TO <replaceable class="parameter">새나열값</replaceable>

<phrase><replaceable class="parameter">작업</replaceable> 자리에는:</phrase>

    ADD ATTRIBUTE <replaceable class="parameter">속성이름</replaceable> <replaceable class="parameter">자료형</replaceable> [ COLLATE <replaceable class="parameter">문자정렬규칙</replaceable> ] [ CASCADE | RESTRICT ]
    DROP ATTRIBUTE [ IF EXISTS ] <replaceable class="parameter">속성이름</replaceable> [ CASCADE | RESTRICT ]
    ALTER ATTRIBUTE <replaceable class="parameter">속성이름</replaceable> [ SET DATA ] TYPE <replaceable class="parameter">자료형</replaceable> [ COLLATE <replaceable class="parameter">문자정렬규칙</replaceable> ] [ CASCADE | RESTRICT ]
</synopsis>
 </refsynopsisdiv>

 <refsect1>
  <title>설명</title>

  <para>
   <command>ALTER TYPE</command> 명령은 사용자 정의 자료형의 속성을 바꾼다.
   아래와 같이 여러 형태의 구문을 사용할 수 있다:

  <variablelist>
   <varlistentry>
    <term><literal>ADD ATTRIBUTE</literal></term>
    <listitem>
     <para>
      복합 자료형에서 새 속성을 추가한다. 문법은 
      <xref linkend="sql-createtype"/> 명령 설명서에 있는 것과 같다.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>DROP ATTRIBUTE [ IF EXISTS ]</literal></term>
    <listitem>
     <para>
      해당 복합 자료형에서 한 속성을 뺀다.
      <literal>IF EXISTS</literal> 옵션을 사용하면 해당 속성이 
      없더라도 오류로 처리하지 않고, 알림 메시지만 보여주고 마친다.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>SET DATA TYPE</literal></term>
    <listitem>
     <para>
      해당 복합 자료형에 있는 한 속성의 자료형을 바꾼다.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>OWNER</literal></term>
    <listitem>
     <para>
      해당 자료형의 소유주를 바꾼다.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>RENAME</literal></term>
    <listitem>
     <para>
      해당 자료형의 이름을 바꾸거나, 그 자료형이 복합 자료형인 경우
      개별 속성 이름을 바꾼다.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>SET SCHEMA</literal></term>
    <listitem>
     <para>
      해당 자료형의 스키마를 바꾼다.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>ADD VALUE [ IF NOT EXISTS ] [ BEFORE | AFTER ]</literal></term>
    <listitem>
     <para>
      나열형 자료에 새 나열값을 추가한다.  추가될 위치는
      기준값과, 그 값의 <literal>BEFORE</literal>, <literal>AFTER</literal>
      옵션으로 지정한다.  끼워넣을 위치를 지정하지 않으면 맨 뒤에 추가한다.
     </para>
     <para>
      <literal>IF NOT EXISTS</literal> 옵션을 사용하면, 이미 추가할 나열값이
      있는 경우 오류로 처리하지 않고 알림 메시지만 보여준다.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>RENAME VALUE</literal></term>
    <listitem>
     <para>
      나열형 자료의 한 나열값을 바꾼다.
      그 값의 위치는 상관 없다.  기존 나열값이 없거나, 이미 
      새 나열값이 있는 경우는 오류로 처리한다.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
  </para>

  <para>
   <literal>ADD ATTRIBUTE</literal>, <literal>DROP
   ATTRIBUTE</literal>, <literal>ALTER ATTRIBUTE</literal> 작업은
   하나의 명령에서 여러 번 사용할 수 있다.  
  </para>

  <para>
   <command>ALTER TYPE</command> 명령은 해당 자료형 소유주가 실행할 수 있다.
   스키마를 바꾸는 경우, 해당 소유주는 새 스키마에 대해서
   <literal>CREATE</literal> 권한이 있어야 한다.
   소유주는 바꾸는 경우, 기존 소유주는 직간접적으로
   새 소유주의 소속원이어야하며, 새 소유주는 해당 스키마에 대해서
   <literal>CREATE</literal> 권한이 있어야 한다.
   (새 소유주가 해당 자료형을 지우거나, 다시 만들 수 있어야 하기 때문이다.
   슈퍼유저로 작업할 때는 이런 제약이 없다.)
   복합 자료형에 한 속성을 추가하거나, 그 속성을 변경할 때는, 
   그 속성용 자료형에 대해서 <literal>USAGE</literal> 권한이 있어야 한다.
  </para>
 </refsect1>

 <refsect1>
  <title>매개 변수</title>

   <para>
    <variablelist>
     <varlistentry>
      <term><replaceable class="parameter">이름</replaceable></term>
      <listitem>
       <para>
        작업 대상 자료형 이름(스키마 이름 포함).
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">새이름</replaceable></term>
      <listitem>
       <para>
        바뀔 새 자료형 이름.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">새소유주</replaceable></term>
      <listitem>
       <para>
        해당 자료형의 바뀔 새 소유주 이름.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">새스키마</replaceable></term>
      <listitem>
       <para>
        해당 자료형의 바뀔 새 스키마 이름.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">속성이름</replaceable></term>
      <listitem>
       <para>
        해당 자료형에 추가, 삭제, 변경할 속성 이름.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">새속성이름</replaceable></term>
      <listitem>
       <para>
        바뀔 새 속성 이름.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">자료형</replaceable></term>
      <listitem>
       <para>
        추가, 변경할 속성 자료형 이름.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">새나열값</replaceable></term>
      <listitem>
       <para>
        나열형 자료에서 새로 추가할 나열값.
        나열형에서 값은 작은 따옴표를 사용해서 지정한다.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">인근나열값</replaceable></term>
      <listitem>
       <para>
        추가할 나열값을 기존 목록에서 끼워 넣고자 할 때, 기준이 되는
        나열값. 이 값을 기준으로 앞에, 또는 뒤에 새 나열값을 끼워 넣는다.
        나열형에서 값은 작은 따옴표를 사용해서 지정한다.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">기존나열값</replaceable></term>
      <listitem>
       <para>
        나열형에서 값을 바꿀 기존 나열값.
        나열형에서 값은 작은 따옴표를 사용해서 지정한다.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><literal>CASCADE</literal></term>
      <listitem>
       <para>
        바꿀 자료형이 자료형처럼 사용하는 테이블인 경우, 
        의존 관계가 있는 모든 자료형도 모두 바꾼다.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><literal>RESTRICT</literal></term>
      <listitem>
       <para>
        바꿀 자료형이 자료형처럼 사용하는 테이블이면, 
        작업을 하지 않는다.  이것이 기본값이다.
       </para>
      </listitem>
     </varlistentry>

    </variablelist>
   </para>
  </refsect1>

 <refsect1>
  <title>참고</title>

  <para>
   <command>ALTER TYPE ... ADD VALUE</command> (나열형에 새로운 값 추가하는
   구문) 작업이 트랜잭션 내에서 사용되었다면, 그 트랜잭션이 커밋되기
   전까지 새로 추가된 값을 사용할 수 없다.
  </para>

  <para>
   이 명령으로 추가된 나열값을 사용하는 작업이, 
   해당 나열형 자료형을 처음 만들 때부터 있었던 나열값을 사용하는 
   작업보다 몇몇 상황에서는 더 느릴 수 있다.
   <literal>BEFORE</literal> 또는 <literal>AFTER</literal> 옵션을
   사용해서 중간에 끼워진 나열값인 경우 그렇다. 또한,
   나열값을 목록의 맨 뒤에 추가했음에도 불구하고, 느린 경우도 
   있다(OID 순환으로 새로 추가된 나열값의 OID가 기존 나열값보다 
   작은 경우).  일반적으로 이 느림을 무시해도 될 정도이나, 
   최적의 속도를 보장해야하는 상황이라면, 해당 자료형을 다시 만들거나, 
   데이터베이스 전체를 덤프하고 다시 복원해서 속도 문제를 개선할 수 있다.
  </para>
 </refsect1>

 <refsect1>
  <title>예제</title>

  <para>
   자료형 이름 바꾸기:
<programlisting>
ALTER TYPE electronic_mail RENAME TO email;
</programlisting>
  </para>

  <para>
   <literal>email</literal> 자료형의 소유주를 <literal>joe</literal>로 바꾸기:
<programlisting>
ALTER TYPE email OWNER TO joe;
</programlisting>
  </para>

  <para>
   <literal>email</literal> 자료형의 스키마를 <literal>customers</literal>로:
<programlisting>
ALTER TYPE email SET SCHEMA customers;
</programlisting>
  </para>

  <para>
   속성 추가하기:
<programlisting>
ALTER TYPE compfoo ADD ATTRIBUTE f3 int;
</programlisting>
  </para>

  <para>
   나열형 자료에서 red 뒤에 orange 끼워넣기:
<programlisting>
ALTER TYPE colors ADD VALUE 'orange' AFTER 'red';
</programlisting>
  </para>

  <para>
   나열값 바꾸기:
<programlisting>
ALTER TYPE colors RENAME VALUE 'purple' TO 'mauve';
</programlisting></para>
 </refsect1>

 <refsect1>
  <title>호환성</title>

  <para>
   속성 추가 삭제 구문은 표준 SQL 구문이며, 나머지는
   PostgreSQL 확장 기능이다.
  </para>
 </refsect1>

 <refsect1 id="sql-altertype-see-also">
  <title>관련 항목</title>

  <simplelist type="inline">
   <member><xref linkend="sql-createtype"/></member>
   <member><xref linkend="sql-droptype"/></member>
  </simplelist>
 </refsect1>
</refentry>
