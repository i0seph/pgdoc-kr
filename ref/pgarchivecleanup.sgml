<!--
doc/src/sgml/ref/pgarchivecleanup.sgml
PostgreSQL documentation
-->

<refentry id="pgarchivecleanup">
 <indexterm zone="pgarchivecleanup">
  <primary>pg_archivecleanup</primary>
 </indexterm>

 <refmeta>
  <refentrytitle><application>pg_archivecleanup</application></refentrytitle>
  <manvolnum>1</manvolnum>
  <refmiscinfo>Application</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>pg_archivecleanup</refname>
  <refpurpose><productname>PostgreSQL</productname> WAL 아카이브 파일 정리</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
  <cmdsynopsis>
   <command>pg_archivecleanup</command>
   <arg rep="repeat"><replaceable>옵션</replaceable></arg>
   <arg choice="plain"><replaceable>아카이브위치</replaceable></arg>
   <arg choice="plain"><replaceable>남겨둘_제일_오래된파일</replaceable></arg>
  </cmdsynopsis>
 </refsynopsisdiv>

 <refsect1>
  <title>설명</title>

 <para>
  <application>pg_archivecleanup</application> 명령은 대기 서버에서 
  이미 반영 된 WAL 파일을 정리할 때 사용하려고 개발되었다(<xref
  linkend="warm-standby"/> 참조).  물론 <application>pg_archivecleanup</application>
  명령은 아카이브 파일을 정리하기 위해 단독으로 사용할 수도 있다.
 </para>

  <para>
   대기 서버에서 <application>pg_archivecleanup</application> 명령을 
   사용하는 방법은 <filename>postgresql.conf</filename> 파일에 다음과
   같이 지정한다:
<programlisting>
archive_cleanup_command = 'pg_archivecleanup <replaceable>아카이브위치</replaceable> %r'
</programlisting>
   <replaceable>아카이브위치</replaceable>는 지우려고 하는 WAL 파일이 있는 디렉터러
   이름이다.
  </para>
  <para>
   <xref linkend="guc-archive-cleanup-command"/> 설정은
   <replaceable>아카이브위치</replaceable> 디렉터리에 안에 있는 
   마지막으로 반영한 <literal>%r</literal> 파일을 빼고 이 파일보다 먼저 
   반영된 모든 오래된 파일을 지운다.  이렇게 해서 서버 비정상 종료 다음 서버 
   복구 작업에 필요하지 않은 오래된 파일을 지워 보관할 파일 수를 최소화 한다.
   <replaceable>아카이브위치</replaceable> 디렉터리는 특정 대기 서버에서만
   사용하는 경우는 괜찮으나, 여러 대기 서버가 함께 사용하는 경우라면
   이 명령의 사용은 <emphasis>위험하다</emphasis>.
  </para>
  <para>
   앞에서 설명한 용도와 달리 <replaceable>아카이브위치</replaceable> 디렉터리에서
   <replaceable>남겨둘_제일_오래된파일</replaceable>보다 오래된 (해당 WAL로그
   보다 논리적으로 오래된) 모든 WAL 파일을 지우는 용도로도 사용할 수 있다.
   이 용도로 사용할 때, <filename>.partial</filename>, <filename>.backup</filename>
   같은 파일을 <replaceable>남겨둘_제일_오래된파일</replaceable>로 
   지정하면, 그 파일의 앞부분 이름을 사용해서 작업한다.  예를 들어 ,
   <filename>000000010000003700000010</filename> 파일보다 오래된 파일을 
   삭제하려면 다음과 같은 형태로 사용한다:
<programlisting>
pg_archivecleanup -d archive 000000010000003700000010.00000020.backup

pg_archivecleanup:  keep WAL file "archive/000000010000003700000010" and later
pg_archivecleanup:  removing file "archive/00000001000000370000000F"
pg_archivecleanup:  removing file "archive/00000001000000370000000E"
</programlisting>
  </para>
  <para>
   <application>pg_archivecleanup</application> 명령은
   <replaceable>archivelocation</replaceable> 디렉터리 안에 있는 파일을 지우는
   명령이기 때문에, 이 명령을 실행하는 사용자가 지울 수 있는 권한이 
   있어야한다.  즉 서버를 실행하는 OS 사용자여야 한다.
  </para>
 </refsect1>

 <refsect1>
  <title>옵션</title>

   <para>
    <application>pg_archivecleanup</application> 명령에서는
    다음과 같은 옵션을 사용할 수 있다:

    <variablelist>

     <varlistentry>
      <term><option>-d</option></term>
      <listitem>
       <para>
        <filename>stderr</filename> 장치로 각종 디버그 용 정보를 출력한다.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-n</option></term>
      <listitem>
       <para>
        해당 파일을 지우지 않고, 각 파일에 대한 
        작업 계획만 <filename>stdout</filename> 장치로 보여 준다 (테스트용).
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-V</option></term>
      <term><option>--version</option></term>
      <listitem>
       <para>
        <application>pg_archivecleanup</application> 버전을 보여주고 마친다.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-x</option> <replaceable>확장자</replaceable></term>
      <listitem>
       <para>
        이 옵션을 지정하면, 지울 대상이 되는 파일이 논리적인 해당 파일 
        이름에 확장자가 붙은 파일로 간주한다.  전형적으로 
        아카이브 파일을 압축해서 보관하는 경우 사용한다. 
        사용예: <literal>-x .gz</literal>.
       </para>

      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-?</option></term>
      <term><option>--help</option></term>
      <listitem>
       <para>
        <application>pg_archivecleanup</application> 명령에 대한
        명령행 옵션 도움말을 보여주고 마친다.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </para>
 </refsect1>

 <refsect1>
  <title>환경변수</title>

  <para>
   The environment variable <envar>PG_COLOR</envar> specifies whether to use
   color in diagnostic messages. Possible values are
   <literal>always</literal>, <literal>auto</literal> and
   <literal>never</literal>.
  </para>
 </refsect1>

 <refsect1>
  <title>참고</title>

  <para>
   <application>pg_archivecleanup</application> 명령은
   <productname>PostgreSQL</productname> 8.0 버전에 처음 등장했고, 
   뒤에 독립적인 응용프로그램이 되었고, <productname>PostgreSQL</productname> 9.0
   버전부터 <xref linkend="guc-archive-cleanup-command"/> 설정 값으로
   사용할 수 있었다.
  </para>

  <para>
   <application>pg_archivecleanup</application> 명령은
   C 언어로 작성되었으며 변경하기 쉬운 코드로 작성되었다.  그래서 
   필요하다면, 얼마든지 원하는 기능으로 변경 해서 사용 가능하다.
  </para>
 </refsect1>

 <refsect1>
  <title>예제</title>

  <para>리눅스 환경에서는 일반적으로 다음과 같이 사용된다:
<programlisting>
archive_cleanup_command = 'pg_archivecleanup -d /mnt/standby/archive %r 2>>cleanup.log'
</programlisting>
   아카이브 디렉터리는 대기 서버에서 접근 할 수 있는 물리적 위치다.
   위 경우는 <varname>archive_command</varname> 명령에서 NFS 디렉터리를 
   사용하고 있지만 대기 서버 입장에서는 로컬 디스크가 될 것이다.
   이 설정은 다음과 같은 일을 한다:
  </para>
  <itemizedlist>
   <listitem>
    <para>
     <filename>cleanup.log</filename> 파일에 자세한 작업 내역을 남기며,
    </para>
   </listitem>
   <listitem>
    <para>
     해당 디렉터리 안에 더 이상 필요 없는 WAL 파일을 지운다.
    </para>
   </listitem>
  </itemizedlist>
 </refsect1>

 <refsect1>
  <title>관련 항목</title>

  <simplelist type="inline">
   <member><xref linkend="pgstandby"/></member>
  </simplelist>
 </refsect1>
</refentry>
