<!--
doc/src/sgml/ref/create_language.sgml
PostgreSQL documentation
-->

<refentry id="sql-createlanguage">
 <indexterm zone="sql-createlanguage">
  <primary>CREATE LANGUAGE</primary>
 </indexterm>

 <refmeta>
  <refentrytitle>CREATE LANGUAGE</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>CREATE LANGUAGE</refname>
  <refpurpose>새 프로시져 언어 정의</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
<synopsis>
CREATE [ OR REPLACE ] [ TRUSTED ] [ PROCEDURAL ] LANGUAGE <replaceable class="parameter">이름</replaceable>
    HANDLER <replaceable class="parameter">호출핸들러</replaceable> [ INLINE <replaceable class="parameter">인라인핸들러</replaceable> ] [ VALIDATOR <replaceable>유효성검사함수</replaceable> ]
CREATE [ OR REPLACE ] [ TRUSTED ] [ PROCEDURAL ] LANGUAGE <replaceable class="parameter">이름</replaceable>
</synopsis>
 </refsynopsisdiv>

 <refsect1 id="sql-createlanguage-description">
  <title>설명</title>

  <para>
   <command>CREATE LANGUAGE</command> 명령은
   <productname>PostgreSQL</productname> 내 함수를 만들거나, 
   <command>DO</command> 명령을 사용할 때 지정하는 프로시져
   언어를 만든다. - 새로 만드는 개념보다는 조합해서 그 언어를 사용할 수 
   있도록 등록한다 - 옮긴이.
  </para>

  <para>
   <command>CREATE LANGUAGE</command> 명령의 내부 작업은
   해당 언어로 작성된 함수 본문을 처리하는 핸들러 함수와 
   해당 언어 이름의 연결 작업이다.  언어 핸들러에 대한
   자세한 설명은 <xref linkend="plhandler"/>에서 다룬다.
  </para>

  <para>
   <command>CREATE OR REPLACE LANGUAGE</command> 명령은
   새로운 언어를 만들거나, 그 언어 설정을 바꾼다.
   해당 언어가 이미 있다면, 명령어에 지정한 옵션으로 매개 변수를
   바꾼다. 하지만, 언어의 소유주나 접근 권한은 바뀌지 않는다.
   또, 해당 언어와 관련된 이미 있는 함수들도 여전히 유요한 상태를 
   유지한다.
  </para>

  <para>
   새 언어 등록 또는 매개 변수 변경은 <productname>PostgreSQL</productname>
   슈퍼유저 권한이 있어야 가능하다.  
   한편, 해당 언어의 소유주를 일반 사용자로 지정하면, 
   그 사용자는 그 언어를 삭제, 권한 변경, 이름 변경, 새 소유주 지정을 
   할 수 있다.  (단, C 함수들은 일반 사용자에게 소유권을 부여하는 것은
   위험하다.  이렇게 되면 그 일반 사용자 슈퍼유저 권한을 획득하는 길이 
   열리게 된다.)
  </para>

  <para>
   핸들러 함수를 지정하지 않는 <command>CREATE LANGUAGE</command> 구문은
   더 이상 사용할 수 없다.  오래된 버전의 덤프 파일 호환성 유지 때문에,
   있을 뿐, 이것은 <command>CREATE EXTENSION</command>으로 
   재해석한다.  이런 구문은 그 언어와 이름이 같은 확장 모듈을 설치로
   간주한다.  그 확장 모듈이 설치되면, 필요한 함수들과 언어가 함께
   설치된다.
  </para>
 </refsect1>

 <refsect1 id="sql-createlanguage-parameters">
  <title>매개 변수</title>

   <variablelist>
    <varlistentry>
     <term><literal>TRUSTED</literal></term>

     <listitem>
      <para><literal>TRUSTED</literal> 옵션을 사용하면,
       그 사용자가 사용하면 안될 자료에 접근을 금지한다.
       이 키워드가 빠지면,
       <productname>PostgreSQL</productname> 슈퍼유저만
       이 언어를 이용해서 새 함수를 만들 수 있다.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><literal>PROCEDURAL</literal></term>

     <listitem>
      <para>
       호환성을 위해 있는 키워드. 무시함.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable class="parameter">이름</replaceable></term>

     <listitem>
      <para>
       새 프로시져 언어 이름.
       이 이름은 해당 데이터베이스 내에 유일해야 한다.
      </para>

      <para>
       하위 호환성을 위해, 이 이름은 작은 따옴표로 둘러 쌀 수도 있다.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><literal>HANDLER</literal> <replaceable class="parameter">호출핸들러</replaceable></term>

     <listitem>
      <para><replaceable class="parameter">호출핸들러</replaceable>는
       이 언어를 사용하는 함수에서 그 함수 본문을 처리할 함수 이름이다.
       이 호출 핸들러 함수는 
       C 언어로 작성되며, <productname>PostgreSQL</productname> 
       C 언어 함수 버전 1 규칙으로 만들어야 하며, 
       입력 인자는 없고, 반환 자료형은 <type>language_handler</type>
       형이다.  이 자료형은 
       이 함수가 호출 핸들러로 사용됨을 식별하기 위한 자료형이다.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><literal>INLINE</literal> <replaceable class="parameter">인라인핸들러</replaceable></term>

     <listitem>
      <para><replaceable class="parameter">인라인핸들러</replaceable>는
       <xref linkend="sql-do"/> 명령에서 사용하는 코드 블럭을 처리할 때
       사용하는 함수 이름이다.
       <replaceable class="parameter">인라인핸들러</replaceable> 함수를
       지정하지 않으면, <xref linkend="sql-do"/> 명령에서 해당 언어를
       사용할 수 없게 된다.
       이 함수의 입력 인자는 <type>internal</type> 형 하나를 사용하며,
       반환 값은 <type>void</type>다.  핸들러의 반환값은 무시된다.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><literal>VALIDATOR</literal> <replaceable class="parameter">유효성검사함수</replaceable></term>

     <listitem>
      <para><replaceable class="parameter">유효성검사함수</replaceable>는
       한 함수가 만들어질 때, 함수 본문의 구문 검사를 하는 함수 이름이다.
       이 함수를 지정하지 않으면, 새 함수를 만들 때, 유효성 검사를 
       하지 않는다.
       이 유효성 검사 함수의 입력 인자는 만들어지는 함수의 
       OID를 넘겨 받는  <type>oid</type> 형 인자 하나이고, 
       반환은 <type>void</type> 다.
      </para>

      <para>
       이 유효성 검사 함수는 함수 본문 내 문법 검사를 주로 담당하지만,
       그 외 함수 여러 속성들도 함께 검사하기도 한다.
       예를 들어, 해당 언어가 처리할 수 없는 자료형이 함수의 입력 인자로
       사용되는 것을 막는데도 사용된다.  유효성 검사의
       오류 처리는 이 함수 내 <function>ereport()</function> 함수 
       호출로 한다.  이 함수 반환 값은 무시된다.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>

 </refsect1>

 <refsect1 id="sql-createlanguage-notes">
  <title>참고</title>

  <para>
   프로시져 언어를 지울 때는 <xref linkend="sql-droplanguage"/> 명령을 
   사용한다.
  </para>

  <para>
   현재 설치된 언어의 등록 정보는 
   <classname>pg_language</classname> 시스템 카탈로그에 보관된다(<xref
   linkend="catalog-pg-language"/> 참조).
   또한 <application>psql</application>에서
   <command>\dL</command> 명령어로 설치된 언어를 살펴볼 수도 있다.
  </para>

  <para>
   해당 언어용 함수를 만들 때는 사용자가 그 언어에 대해
   <literal>USAGE</literal> 권한이 있어야 한다.
   신뢰할 수 있는 trusted 언어는 기본적으로
   <literal>USAGE</literal> 권한이 <literal>PUBLIC</literal>(모든 사용자)에게 
   부여된다.
   이 권한은 필요 하다면 도로 거둘 revoke 수 있다.
  </para>

  <para>
   프로시져 언어는 각 데이터베이스 별로 설치해서 사용한다.
   자주 쓰는 언어라면, <literal>template1</literal> 데이터베이스에 
   미리 설치해서, 새로운 데이터베이스를 만들 때 그 언어를 
   설치해야하는 번거로움을 줄일 수 있다.
  </para>

 </refsect1>

 <refsect1 id="sql-createlanguage-examples">
  <title>예제</title>

  <para>
   새 프로시져 언어를 만드는 단순한 절차는 다음과 같다:
<programlisting>
CREATE FUNCTION plsample_call_handler() RETURNS language_handler
    AS '$libdir/plsample'
    LANGUAGE C;
CREATE LANGUAGE plsample
    HANDLER plsample_call_handler;
</programlisting>
   일반적으로 위 작업 절차를 확장 모듈 생성 스크립트로 만들고,
   다음과 같이 확장 모듈 설치 작업으로 진행한다:
<programlisting>
CREATE EXTENSION plsample;
</programlisting></para>
 </refsect1>

 <refsect1 id="sql-createlanguage-compat">
  <title>호환성</title>

  <para>
   <command>CREATE LANGUAGE</command> 구문은
   <productname>PostgreSQL</productname> 확장 기능이다.
  </para>
 </refsect1>

 <refsect1>
  <title>관련 항목</title>

  <simplelist type="inline">
   <member><xref linkend="sql-alterlanguage"/></member>
   <member><xref linkend="sql-createfunction"/></member>
   <member><xref linkend="sql-droplanguage"/></member>
   <member><xref linkend="sql-grant"/></member>
   <member><xref linkend="sql-revoke"/></member>
  </simplelist>
 </refsect1>
</refentry>
