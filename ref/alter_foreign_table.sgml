<!--
doc/src/sgml/rel/alter_foreign_table.sgml
PostgreSQL documentation
-->

<refentry id="sql-alterforeigntable">
 <indexterm zone="sql-alterforeigntable">
  <primary>ALTER FOREIGN TABLE</primary>
 </indexterm>

 <refmeta>
  <refentrytitle>ALTER FOREIGN TABLE</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>ALTER FOREIGN TABLE</refname>
  <refpurpose>외부 테이블 정의 바꾸기</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
<synopsis>
ALTER FOREIGN TABLE [ IF EXISTS ] [ ONLY ] <replaceable class="parameter">이름</replaceable> [ * ]
    <replaceable class="parameter">작업</replaceable> [, ... ]
ALTER FOREIGN TABLE [ IF EXISTS ] [ ONLY ] <replaceable class="parameter">이름</replaceable> [ * ]
    RENAME [ COLUMN ] <replaceable class="parameter">칼럼이름</replaceable> TO <replaceable class="parameter">새칼럼이름</replaceable>
ALTER FOREIGN TABLE [ IF EXISTS ] <replaceable class="parameter">이름</replaceable>
    RENAME TO <replaceable class="parameter">새이름</replaceable>
ALTER FOREIGN TABLE [ IF EXISTS ] <replaceable class="parameter">이름</replaceable>
    SET SCHEMA <replaceable class="parameter">새스키마</replaceable>

<phrase><replaceable class="parameter">작업</replaceable> 자리에는:</phrase>

    ADD [ COLUMN ] <replaceable class="parameter">칼럼이름</replaceable> <replaceable class="parameter">자료형</replaceable> [ COLLATE <replaceable class="parameter">문자정렬규칙</replaceable> ] [ <replaceable class="parameter">칼럼_제약조건</replaceable> [ ... ] ]
    DROP [ COLUMN ] [ IF EXISTS ] <replaceable class="parameter">칼럼이름</replaceable> [ RESTRICT | CASCADE ]
    ALTER [ COLUMN ] <replaceable class="parameter">칼럼이름</replaceable> [ SET DATA ] TYPE <replaceable class="parameter">자료형</replaceable> [ COLLATE <replaceable class="parameter">문자정렬규칙</replaceable> ]
    ALTER [ COLUMN ] <replaceable class="parameter">칼럼이름</replaceable> SET DEFAULT <replaceable class="parameter">표현식</replaceable>
    ALTER [ COLUMN ] <replaceable class="parameter">칼럼이름</replaceable> DROP DEFAULT
    ALTER [ COLUMN ] <replaceable class="parameter">칼럼이름</replaceable> { SET | DROP } NOT NULL
    ALTER [ COLUMN ] <replaceable class="parameter">칼럼이름</replaceable> SET STATISTICS <replaceable class="parameter">정수</replaceable>
    ALTER [ COLUMN ] <replaceable class="parameter">칼럼이름</replaceable> SET ( <replaceable class="parameter">속성옵션</replaceable> = <replaceable class="parameter">값</replaceable> [, ... ] )
    ALTER [ COLUMN ] <replaceable class="parameter">칼럼이름</replaceable> RESET ( <replaceable class="parameter">속성옵션</replaceable> [, ... ] )
    ALTER [ COLUMN ] <replaceable class="parameter">칼럼이름</replaceable> SET STORAGE { PLAIN | EXTERNAL | EXTENDED | MAIN }
    ALTER [ COLUMN ] <replaceable class="parameter">칼럼이름</replaceable> OPTIONS ( [ ADD | SET | DROP ] <replaceable class="parameter">옵션</replaceable> ['<replaceable class="parameter">값</replaceable>'] [, ... ])
    ADD <replaceable class="parameter">테이블_제약조건</replaceable> [ NOT VALID ]
    VALIDATE CONSTRAINT <replaceable class="parameter">제약조건이름</replaceable>
    DROP CONSTRAINT [ IF EXISTS ]  <replaceable class="parameter">제약조건이름</replaceable> [ RESTRICT | CASCADE ]
    DISABLE TRIGGER [ <replaceable class="parameter">트리거이름</replaceable> | ALL | USER ]
    ENABLE TRIGGER [ <replaceable class="parameter">트리거이름</replaceable> | ALL | USER ]
    ENABLE REPLICA TRIGGER <replaceable class="parameter">트리거이름</replaceable>
    ENABLE ALWAYS TRIGGER <replaceable class="parameter">트리거이름</replaceable>
    SET WITHOUT OIDS
    INHERIT <replaceable class="parameter">상위테이블</replaceable>
    NO INHERIT <replaceable class="parameter">상위테이블</replaceable>
    OWNER TO { <replaceable class="parameter">새소유주</replaceable> | CURRENT_USER | SESSION_USER }
    OPTIONS ( [ ADD | SET | DROP ] <replaceable class="parameter">옵션</replaceable> ['<replaceable class="parameter">값</replaceable>'] [, ... ])
</synopsis>
 </refsynopsisdiv>

 <refsect1>
  <title>설명</title>

  <para>
   <command>ALTER FOREIGN TABLE</command> 명령은 외부 테이블 정의를 바꾼다.
   다음과 같은 여러 구문을 사용할 수 있다:

  <variablelist>
   <varlistentry>
    <term><literal>ADD COLUMN</literal></term>
    <listitem>
     <para>
      <xref linkend="sql-createforeigntable"/> 명령에서 사용하는 새 칼럼 정의
      구문을 사용해서 새 칼럼을 추가한다.
      일반 테이블의 칼럼 추가와 달리 외부 테이블의 칼럼 추가는 
      자료 저장 관련 어떤 작업도 일어나지 않고, 단지 테이블 정보만 
      바꾼다.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>DROP COLUMN [ IF EXISTS ]</literal></term>
    <listitem>
     <para>
      칼럼 삭제. 이 칼럼이 삭제 될 때 이 칼럼을 사용하는 
      뷰 같은 것들이 있다면, <literal>CASCADE</literal> 옵션을 사용해서
      함께 지울 수 있다.
      <literal>IF EXISTS</literal> 옵션을 사용하면, 
      해당 칼럼이 없어도 오류로 처리하지 않고, 단지 알림 메시지만
      보여주고 아무런 작업을 하지 않는다.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>SET DATA TYPE</literal></term>
    <listitem>
     <para>
      외부 테이블 칼럼의 자료형을 바꾼다.
      앞에서 설명한 것과 같이 자료 저장 관련 작업은 하지 않고, 
      단지 칼럼 속성만 바꿔, <productname>PostgreSQL</productname>에서는
      그 외부 칼럼의 자료형이 여기서 지정하는 새 자료형이다고
      간주하는 역할만 한다.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>SET</literal>/<literal>DROP DEFAULT</literal></term>
    <listitem>
     <para>
      칼럼 기본값 지정 또는 삭제.  이 작업은
      작업 완료 후 일어나는 <command>INSERT</command>
      <command>UPDATE</command> 명령에 대해서 작동한다.  이미 있는 
      자료에 대해서는 적용하지 않는다.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>SET</literal>/<literal>DROP NOT NULL</literal></term>
    <listitem>
     <para>
      칼럼 not null 속성을 바꾼다.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>SET STATISTICS</literal></term>
    <listitem>
     <para>
      <xref linkend="sql-analyze"/> 작업에서 
      수집할 통계 정보량.  <xref linkend="sql-altertable"/>
      명령과 같은 방법으로 사용한다.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>SET ( <replaceable class="parameter">속성옵션</replaceable> = <replaceable class="parameter">값</replaceable> [, ... ] )</literal></term>
    <term><literal>RESET ( <replaceable class="parameter">속성옵션</replaceable> [, ... ] )</literal></term>
    <listitem>
     <para>
      속성 옵션 바꾸기.
      <xref linkend="sql-altertable"/> 명령 설명서에서
      자세히 소개하고 있다.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term>
     <literal>SET STORAGE</literal>
    </term>
    <listitem>
     <para>
      해당 칼럼에 대한 저장 방식에 대한 설정 변경.
      <xref linkend="sql-altertable"/> 명령 설명서에서 자세히
      소개하고 있다.
      해당 테이블의 외부 자료 싸개에서 이 설정값을 따로 
      처리하지 않는다면, 이 설정은 자료를 저장하지 않기 때문에, 
      별 의미가 없다.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>ADD <replaceable class="parameter">테이블_제약조건</replaceable> [ NOT VALID ]</literal></term>
    <listitem>
     <para>
      해당 외부 테이블에 새 제약 조건을 추가한다.  문법은
      <xref linkend="sql-createforeigntable"/> 명령 설명서에서 다루고
      있는 것과 같다.  현재는 <literal>CHECK</literal> 제약 조건만 지원한다.
     </para>

     <para>
      일반 테이블에 제약 조건을 추가하는 것과 달리, 그 제약 조건이 올바른지
      검사를 하지는 않는다. 그냥 외부 테이블의 해당 자료가 
      이 제약 조건을 만족해야 한다는 선언만 하는 것과 같다.  (자세한 논의는
      <xref linkend="sql-createforeigntable"/> 명령 설명서에서 한다.)
      <literal>NOT VALID</literal> 옵션은 이 제약 조건 검사를 안하도록 한다.
      나중에 이 제약 조건을 다시 사용할 수 있도록 단순히 비활성화만 한다.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>VALIDATE CONSTRAINT</literal></term>
    <listitem>
     <para>
      <literal>NOT VALID</literal> 옵션이 지정된 제약 조건을
      활성화 한다.  이 작업을 진행할 때, 기존 자료에 대한 제약 조건에
      따른 유효성 검사는 하지 않는다.  단지 앞으로 처리되는 
      자료에 대해서만 유효성 검사를 한다.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>DROP CONSTRAINT [ IF EXISTS ]</literal></term>
    <listitem>
     <para>
      지정한 제약 조건을 지운다.  <literal>IF EXISTS</literal> 
      옵션을 사용하면, 해당 제약 조건이 없어도 오류로 처리하지 않고,
      알림 메시지만 보여주고, 정상 종료한다.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>DISABLE</literal>/<literal>ENABLE [ REPLICA | ALWAYS ] TRIGGER</literal></term>
    <listitem>
     <para>
      해당 외부 테이블에 정의된 트리거 사용 여부를 바꾼다.  이 부분에 대한
      설명은 <xref linkend="sql-altertable"/> 명령 설명서에서 보다 자세히 다룬다.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>SET WITHOUT OIDS</literal></term>
    <listitem>
     <para>
      <literal>oid</literal> 시스템 칼럼을 없애는 하위 호환 구문이다. 
      <literal>oid</literal> 시스템 칼럼이 없는 서버에는 아무런 작업도 않는다.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>INHERIT <replaceable class="parameter">상위테이블</replaceable></literal></term>
    <listitem>
     <para>
      해당 외부 테이블을 지정한 상위 테이블에 딸린 하위 테이블로 
      지정한다.  테이블 상속 변경에 대한 것은 <xref linkend="sql-altertable"/>
      명령 설명서에서 자세히 다룬다.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>NO INHERIT <replaceable class="parameter">상위테이블</replaceable></literal></term>
    <listitem>
     <para>
      해당 외부 테이블과 지정한 상위 테이블 간의 종속 관계를 끊는다.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>OWNER</literal></term>
    <listitem>
     <para>
      해당 테이블의 소유주를 바꾸는 구문.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>OPTIONS ( [ ADD | SET | DROP ] <replaceable class="parameter">옵션</replaceable> ['<replaceable class="parameter">값</replaceable>'] [, ... ] )</literal></term>
    <listitem>
     <para>
      테이블이나, 특정 칼럼 옵션을 
      <literal>ADD</literal>(추가), <literal>SET</literal>(변경), <literal>DROP</literal>(삭제)
      하는 구문이다.  이 작업 방법을 지정하지 않으면, <literal>ADD</literal>로 
      간주한다.  옵션 이름을 중복해서 사용 할 수 없다. (테이블 옵션과
      칼럼 옵션 이름이 같은 경우는 각각의 자리에서는 같이 사용할 수 있다.)
      옵션 이름과 그 값에 대한 유효성 검사는 외부 자료 싸개가 담당한다.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>RENAME</literal></term>
    <listitem>
     <para>
      <literal>RENAME</literal> 구문은 테이블 이름이나, 특정 칼럼 이름을
      바꾼다.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>SET SCHEMA</literal></term>
    <listitem>
     <para>
      스키마 변경 할 때 사용하는 구문.
     </para>
    </listitem>
   </varlistentry>

  </variablelist>
  </para>

  <para>
   <literal>RENAME</literal>, <literal>SET SCHEMA</literal> 제외한
   다른 작업들은 하나의 명령에서 여러 작업을 함께 사용할 수 있다.
   예를 들어, 하나의 명령으로 여러 칼럼을 추가하고, 여러 칼럼 자료형을
   바꿀 수 있다.
  </para>

  <para>
   <literal>ALTER FOREIGN TABLE IF EXISTS ...</literal> 구문을 사용하면,
   해당 외부 테이블이 없어도 오류로 처리하지 않고, 알림 메시지만 보여주고
   마친다.
  </para>

  <para>
   <command>ALTER FOREIGN TABLE</command> 명령은 해당 외부 테이블의 소유주가
   사용한다.  스키마를 바꾸는 경우, 새 스키마에 대해서
   <literal>CREATE</literal> 권한이 있어야 한다.
   소유주를 바꾸는 경우, 기존 사용자는 새 소유주의 직간접적으로
   소속원이어야 하며, 새 소유주는 해당 스키마에 대해서
   <literal>CREATE</literal> 권한이 있어야 한다. (그 사용자가 
   이 외부 테이블을 삭제하거나, 다시 만들 수 있어야 하기 때문이다.
   이런 제약은 슈퍼유저가 작업할 때는 없다)
   칼럼을 추가하거나, 칼럼 자료형을 바꾸는 경우, 
   사용자는 해당 자료형에 대한 <literal>USAGE</literal> 권한이 있어야 한다.
  </para>
 </refsect1>

 <refsect1>
  <title>매개 변수</title>

    <variablelist>

     <varlistentry>
      <term><replaceable class="parameter">이름</replaceable></term>
      <listitem>
       <para>
        작업 대상 외부 테이블 이름(스키마 이름 포함).
        이 테이블 이름 앞에 <literal>ONLY</literal> 키워드를 함께 사용하면, 
        작업은 그 테이블에 대해서만 진행되며, 빠지만, 
        그 테이블과 관계된 하위 모든 테이블이 작업 대상이 된다.
        선택적으로 <literal>*</literal>  문자를 테이블 이름 뒤에 지정해서
        명시적으로 하위 테이블 모두 작업하라고 지정할 수도 있다.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">칼럼이름</replaceable></term>
      <listitem>
       <para>
        작업 대상 칼럼 이름.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">새칼럼이름</replaceable></term>
      <listitem>
       <para>
        바뀔 새 칼럼 이름.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">새이름</replaceable></term>
      <listitem>
       <para>
        바뀔 새 테이블 이름
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">자료형</replaceable></term>
      <listitem>
       <para>
        새로 추가될 칼럼의 자료형, 또는 기존 칼럼에서 사용할 바뀔 
        새 자료형.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">테이블_제약조건</replaceable></term>
      <listitem>
       <para>
        추가할 새 테이블 제약 조건
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">제약조건이름</replaceable></term>
      <listitem>
       <para>
        유효성 검사를 하거나, 지울 제약 조건 이름
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><literal>CASCADE</literal></term>
      <listitem>
       <para>
        칼럼이나, 제약 조건을 지울 때, 의존 관계에 있는 모든 속성 또는
        개체(예: 이 테이블을 참조하는 뷰의 칼럼)를 자동으로 
        함께 지운다 (<xref linkend="ddl-depend"/> 참조).
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><literal>RESTRICT</literal></term>
      <listitem>
       <para>
        지우려고 하는 대상에 대한 의존 관계가 있는 개체가 있는 경우에는
        작업을 중지한다.  이것이 기본 작동 방식이다.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">트리거이름</replaceable></term>
      <listitem>
       <para>
        활성화 또는 비활성화할 트리거 이름
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><literal>ALL</literal></term>
      <listitem>
       <para>
        해당 외부 테이블에 지정된 모든 트리거를 활성화 또는 비활성화 한다.
        (내부적으로 자동 지정된 트리거도 있다면, 이 작업을 하려면,
        슈퍼유저 권한이어야 한다.  참고로 서버 기본 기능으로
        외부 테이블에 대해서는 어떠한 내부 트리거를 만들지 않지만,
        확장 기능을 사용하면 외부 테이블에 내부 트리거를 사용할 수도
        있다.)
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><literal>USER</literal></term>
      <listitem>
       <para>
        시스템 내부에서 자동 지정한 트리거를 빼고,
        사용자가 직접 지정한 모든 트리거를 활성화, 비활성화한다.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">상위테이블</replaceable></term>
      <listitem>
       <para>
        상속 관계를 맺거나 끊는다.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">새소유주</replaceable></term>
      <listitem>
       <para>
        해당 외부 테이블의 새 소유주 이름.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">새스키마</replaceable></term>
      <listitem>
       <para>
        해당 외부 테이블의 새 스키마 이름.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
 </refsect1>

 <refsect1>
  <title>참고</title>

   <para>
    <literal>COLUMN</literal> 키워드는 없어도 된다.
   </para>

   <para>
    <literal>ADD COLUMN</literal> 또는 <literal>DROP COLUMN</literal>
    명령으로 칼럼을 추가하거나 뺄 때, <literal>NOT NULL</literal> 또는
    <literal>CHECK</literal> 제약조건을 포함 하거나, 칼럼 자료형을 바꾸는
    <literal>SET DATA TYPE</literal> 구문을 사용하는 경우, 
    원본 자료인 외부 서버에 있는 자료의 유효성 검사는 하지 않는다.
    이 자료 유효성 검사는 사용자 몫이다.
   </para>

   <para>
    사용 가능한 매개 변수에 대한 자세한 설명은
    <xref linkend="sql-createforeigntable"/>에서 다룬다.
   </para>
 </refsect1>

 <refsect1>
  <title>예제</title>

  <para>
   칼럼에 not null 조건 추가:
<programlisting>
ALTER FOREIGN TABLE distributors ALTER COLUMN street SET NOT NULL;
</programlisting>
  </para>

  <para>
   외부 테이블 옵션 변경:
<programlisting>
ALTER FOREIGN TABLE myschema.distributors OPTIONS (ADD opt1 'value', SET opt2 'value2', DROP opt3 'value3');
</programlisting></para>

 </refsect1>

 <refsect1>
  <title>호환성</title>

  <para>
   <literal>ADD</literal>, <literal>DROP</literal>,
   , <literal>SET DATA TYPE</literal> 구문은 SQL 표준이다.
   그 외 구문은
   <productname>PostgreSQL</productname> 확장 기능이다.
   또한 하나의 <command>ALTER FOREIGN TABLE</command> 명령으로
   둘 이상 조작 하는 작업을 지정 가능한 것도 확장 기능이다.
  </para>

  <para>
   <command>ALTER FOREIGN TABLE DROP COLUMN</command> 구문을 이용해서
   칼럼을 삭제해서 아무런 칼럼이 없는 테이블로 바꾸는 것도
   확장 기능이다.  표준 SQL에서는 이를 허용하지 않는다.
  </para>
 </refsect1>

 <refsect1>
  <title>관련 항목</title>

  <simplelist type="inline">
   <member><xref linkend="sql-createforeigntable"/></member>
   <member><xref linkend="sql-dropforeigntable"/></member>
  </simplelist>
 </refsect1>
</refentry>
